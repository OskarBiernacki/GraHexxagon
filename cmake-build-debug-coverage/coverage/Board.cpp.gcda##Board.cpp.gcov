        -:    0:Source:C:/Users/oskar/Desktop/GraHexxagon_Projekt/_Game/Board.cpp
        -:    0:Graph:C:\Users\oskar\Desktop\GraHexxagon_Projekt\cmake-build-debug-coverage\CMakeFiles\GraHexxagon_Projekt.dir\_Game\Board.cpp.gcno
        -:    0:Data:C:\Users\oskar\Desktop\GraHexxagon_Projekt\cmake-build-debug-coverage\CMakeFiles\GraHexxagon_Projekt.dir\_Game\Board.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "Board.h"
        -:    2:#include "vector"
        -:    3:#include "string"
        -:    4:#include "iostream"
        -:    5:
        -:    6:#define DEBUG
        -:    7:
        -:    8:using std::vector;
        -:    9:using std::string;
        -:   10:using std::cout;
        -:   11:using std::pair;
        -:   12:
function _ZN5BoardC2Ev called 1 returned 100% blocks executed 83%
        2:   13:Board::Board() {
        1:   13-block  0
        1:   13-block  1
call    0 returned 1
    %%%%%:   13-block  2
call    1 never executed
        1:   14:    this->generateStandardBoard();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   15:    this->debugConsoleBoardPrint();
        1:   15-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   16:}
        1:   16-block  0
        -:   17:
function _ZN5Board21generateStandardBoardEv called 1 returned 100% blocks executed 89%
        1:   18:void Board::generateStandardBoard() {
        1:   18-block  0
        -:   19:    //Top piramid
        6:   20:    for(int i=0;i<standard_size;i++){
        1:   20-block  0
        6:   20-block  1
branch  0 taken 5 (fallthrough)
branch  1 taken 1
        5:   20-block  2
        5:   21:        if(board_map.size()<i+1)board_map.push_back(vector<char>());
        5:   21-block  0
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0
        5:   21-block  1
call    3 returned 5
call    4 returned 5
branch  5 taken 5 (fallthrough)
branch  6 taken 0 (throw)
        5:   21-block  2
call    7 returned 5
    %%%%%:   21-block  3
call    8 never executed
    %%%%%:   21-block  4
        -:   22:        //frame left
       15:   23:        for(int frame=0;frame<standard_size-1-i;frame++)board_map.at(i).push_back(free_space_symbol);
        5:   23-block  0
       15:   23-block  1
branch  0 taken 10 (fallthrough)
branch  1 taken 5
       10:   23-block  2
call    2 returned 10
branch  3 taken 10 (fallthrough)
branch  4 taken 0 (throw)
       10:   23-block  3
call    5 returned 10
branch  6 taken 10 (fallthrough)
branch  7 taken 0 (throw)
       10:   23-block  4
        -:   24:        //fields
        5:   25:        bool fill=true;
       30:   26:        for(int fields=0; fields < (1 + i * 2); fields++, fill=!fill)board_map.at(i).push_back(fill ? field_symbol : free_space_symbol);
        5:   26-block  0
       30:   26-block  1
branch  0 taken 25 (fallthrough)
branch  1 taken 5
       25:   26-block  2
call    2 returned 25
branch  3 taken 25 (fallthrough)
branch  4 taken 0 (throw)
       25:   26-block  3
branch  5 taken 15 (fallthrough)
branch  6 taken 10
       15:   26-block  4
       10:   26-block  5
       25:   26-block  6
call    7 returned 25
branch  8 taken 25 (fallthrough)
branch  9 taken 0 (throw)
       25:   26-block  7
        -:   27:        //frame right
       15:   28:        for(int frame=0;frame<standard_size-1-i;frame++)board_map.at(i).push_back(free_space_symbol);
        5:   28-block  0
       15:   28-block  1
branch  0 taken 10 (fallthrough)
branch  1 taken 5
       10:   28-block  2
call    2 returned 10
branch  3 taken 10 (fallthrough)
branch  4 taken 0 (throw)
       10:   28-block  3
call    5 returned 10
branch  6 taken 10 (fallthrough)
branch  7 taken 0 (throw)
       10:   28-block  4
        -:   29:    }
        -:   30:    //MID part
        1:   31:    bool fill=false;
        8:   32:    for(int i=standard_size;i<standard_size*3-3;i++){
        1:   32-block  0
        8:   32-block  1
branch  0 taken 7 (fallthrough)
branch  1 taken 1
        7:   32-block  2
        7:   33:        if(board_map.size()<i+1)board_map.push_back(vector<char>());
        7:   33-block  0
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0
        7:   33-block  1
call    3 returned 7
call    4 returned 7
branch  5 taken 7 (fallthrough)
branch  6 taken 0 (throw)
        7:   33-block  2
call    7 returned 7
    %%%%%:   33-block  3
call    8 never executed
    %%%%%:   33-block  4
       70:   34:        for(int fields=0; fields < standard_size*2-1; fields++, fill=!fill)
        7:   34-block  0
       70:   34-block  1
branch  0 taken 63 (fallthrough)
branch  1 taken 7
       63:   34-block  2
       63:   35:            board_map.at(i).push_back(fill ? field_symbol : free_space_symbol);
       63:   35-block  0
call    0 returned 63
branch  1 taken 63 (fallthrough)
branch  2 taken 0 (throw)
       63:   35-block  1
branch  3 taken 31 (fallthrough)
branch  4 taken 32
       31:   35-block  2
       32:   35-block  3
       63:   35-block  4
call    5 returned 63
branch  6 taken 63 (fallthrough)
branch  7 taken 0 (throw)
        -:   36:    }
        -:   37:
        -:   38:    //Bottom piramid
        1:   39:    int level=0;
        6:   40:    for(int i=board_map.size();i<(standard_size*4-3);i++,level++){
        1:   40-block  0
call    0 returned 1
        6:   40-block  1
branch  1 taken 5 (fallthrough)
branch  2 taken 1
        5:   40-block  2
        5:   41:        if(board_map.size()<i+1)board_map.push_back(vector<char>());
        5:   41-block  0
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0
        5:   41-block  1
call    3 returned 5
call    4 returned 5
branch  5 taken 5 (fallthrough)
branch  6 taken 0 (throw)
        5:   41-block  2
call    7 returned 5
    %%%%%:   41-block  3
call    8 never executed
    %%%%%:   41-block  4
        -:   42:        //frame left
       15:   43:        for(int frame=0;frame<level;frame++)board_map.at(i).push_back(free_space_symbol);
        5:   43-block  0
       15:   43-block  1
branch  0 taken 10 (fallthrough)
branch  1 taken 5
       10:   43-block  2
call    2 returned 10
branch  3 taken 10 (fallthrough)
branch  4 taken 0 (throw)
       10:   43-block  3
call    5 returned 10
branch  6 taken 10 (fallthrough)
branch  7 taken 0 (throw)
       10:   43-block  4
        -:   44:        //fields
        5:   45:        bool fill=true;
       35:   46:        for(int field=0;field<2*(standard_size-level);field++,fill=!fill)board_map.at(i).push_back(fill ? field_symbol : free_space_symbol);
        5:   46-block  0
       35:   46-block  1
branch  0 taken 30 (fallthrough)
branch  1 taken 5
       30:   46-block  2
call    2 returned 30
branch  3 taken 30 (fallthrough)
branch  4 taken 0 (throw)
       30:   46-block  3
branch  5 taken 15 (fallthrough)
branch  6 taken 15
       15:   46-block  4
       15:   46-block  5
       30:   46-block  6
call    7 returned 30
branch  8 taken 30 (fallthrough)
branch  9 taken 0 (throw)
       30:   46-block  7
        -:   47:        //frame right
       11:   48:        for(int frame=0;frame<level-1;frame++)board_map.at(i).push_back(free_space_symbol);
        5:   48-block  0
       11:   48-block  1
branch  0 taken 6 (fallthrough)
branch  1 taken 5
        6:   48-block  2
call    2 returned 6
branch  3 taken 6 (fallthrough)
branch  4 taken 0 (throw)
        6:   48-block  3
call    5 returned 6
branch  6 taken 6 (fallthrough)
branch  7 taken 0 (throw)
        6:   48-block  4
        -:   49:    }
        -:   50:    //Disallow Fields
        1:   51:    pair<int, int> mid_field = std::make_pair(standard_size-2+standard_size, standard_size-1);
        1:   51-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    %%%%%:   51-block  1
    %%%%%:   51-block  2
        1:   52:    board_map.at(mid_field.first-2).at(mid_field.second)=disallow_field_symbol;
        1:   52-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   52-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   53:    board_map.at(mid_field.first+1).at(mid_field.second-1)=disallow_field_symbol;
        1:   53-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   53-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   54:    board_map.at(mid_field.first+1).at(mid_field.second+1)=disallow_field_symbol;
        1:   54-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   54-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        -:   55:
        -:   56:    //Set players default
        1:   57:    board_map.at(0).at(4)=this->player_two;
        1:   57-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   57-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   58:    board_map.at(4).at(0)=this->player_one;
        1:   58-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   58-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   59:    board_map.at(4).at(8)=this->player_one;
        1:   59-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   59-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   60:    board_map.at(12).at(0)=this->player_two;
        1:   60-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   60-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   61:    board_map.at(12).at(8)=this->player_two;
        1:   61-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   61-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   62:    board_map.at(16).at(4)=this->player_one;
        1:   62-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   62-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        -:   63:
        1:   64:}
        1:   64-block  0
function _ZN5Board22debugConsoleBoardPrintEv called 1 returned 100% blocks executed 100%
        1:   65:void Board::debugConsoleBoardPrint() {
        1:   65-block  0
        -:   66:    #ifdef DEBUG
       18:   67:        for(int i=0;i<board_map.size();i++){
        1:   67-block  0
       18:   67-block  1
call    0 returned 18
branch  1 taken 17 (fallthrough)
branch  2 taken 1
      171:   68:            for(int x=0;x<board_map.at(i).size();x++){
       17:   68-block  0
      171:   68-block  1
call    0 returned 171
call    1 returned 171
branch  2 taken 154 (fallthrough)
branch  3 taken 17
      154:   68-block  2
      154:   69:                char field=board_map.at(i).at(x);
      154:   69-block  0
call    0 returned 154
call    1 returned 154
      154:   70:                if(field==free_space_symbol)
branch  0 taken 93 (fallthrough)
branch  1 taken 61
       93:   71:                    cout << field<<field<<field;
       93:   71-block  0
call    0 returned 93
call    1 returned 93
call    2 returned 93
        -:   72:                else
       61:   73:                    cout << free_space_symbol << field << free_space_symbol;
       61:   73-block  0
call    0 returned 61
call    1 returned 61
call    2 returned 61
        -:   74:            }
       17:   75:            cout << "\n";
       17:   75-block  0
call    0 returned 17
        -:   76:        }
        1:   77:        cout << "\n\nstandard_size=" << standard_size << '\n';
        1:   77-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:   78:        cout << "free_space_symbol='" << free_space_symbol << "'\n";
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:   79:        cout << "field_symbol='" << field_symbol << "'\n";
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:   80:        cout << "disallow_field_symbol='" << disallow_field_symbol << "'\n";
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:   81:        cout << "DEBUG_Board=ON\n";
call    0 returned 1
        -:   82:    #endif
function _GLOBAL__sub_I__ZN5BoardC2Ev called 1 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_0ii called 1 returned 100% blocks executed 100%
        4:   83:}
        1:   83-block  0
        1:   83-block  1
call    0 returned 1
        1:   83-block  2
        1:   83-block  3
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   83-block  4
branch  3 taken 1 (fallthrough)
branch  4 taken 0
